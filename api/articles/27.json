{"title":"uniapp的vue页面和非全屏webview交换数据的方式","slug":"27","date":"2023-06-03T15:30:57.000Z","updated":"2023-06-03T15:30:57.000Z","comments":true,"path":"api/articles/27.json","excerpt":null,"covers":null,"content":"<p>在uniapp开发中，有时候我们需要在vue页面中嵌入一个webview组件，用来加载一些本地或远程的网页。但是，如何在vue页面和webview之间实现数据的传递和通信呢？常用的方法是使用uniapp官方提供的组件webview ,使用uni-app提供的UniAppJSBridgeReady事件和postMessage方法，来实现vue页面和webview之间的双向数据交换。但是这种方法有一定的局限性，webview组件设置的宽高等样式只有h5有效，在app中显示只能全屏加载，无法在app中实现vue页面和webview同屏交互，本文将介绍另一种自建webview的方法，可以在app中自定义webview的宽高及显隐。</p>\n<p>首先，我们需要在vue页面中自建一个webview组件，代码如下，下面的代码自建了webview，并且完成了vue页面对html页面数据的接收和发送：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\"></span><br><span class=\"language-javascript\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> &#123;</span><br><span class=\"language-javascript\">  <span class=\"hljs-title function_\">data</span>(<span class=\"hljs-params\"></span>) &#123;</span><br><span class=\"language-javascript\">    <span class=\"hljs-keyword\">return</span> &#123;</span><br><span class=\"language-javascript\">        <span class=\"hljs-attr\">topHeight</span>: <span class=\"hljs-number\">0</span>,</span><br><span class=\"language-javascript\">\t    <span class=\"hljs-attr\">windowHeight</span>: <span class=\"hljs-number\">0</span>,</span><br><span class=\"language-javascript\">\t\t<span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">&quot;/hybrid/html/test.html&quot;</span>,</span><br><span class=\"language-javascript\">\t\t<span class=\"hljs-attr\">fun</span>: <span class=\"hljs-literal\">null</span>,</span><br><span class=\"language-javascript\">    &#125;</span><br><span class=\"language-javascript\">  &#125;,</span><br><span class=\"language-javascript\">  <span class=\"hljs-attr\">methods</span>: &#123;</span><br><span class=\"language-javascript\">            <span class=\"hljs-comment\">//初始化</span></span><br><span class=\"language-javascript\">            <span class=\"hljs-title function_\">init</span>(<span class=\"hljs-params\"></span>) &#123;</span><br><span class=\"language-javascript\">\t\t\t\t<span class=\"hljs-comment\">// 获取系统信息，用于设置webview位置</span></span><br><span class=\"language-javascript\">\t\t\t\t<span class=\"hljs-keyword\">var</span> _this = <span class=\"hljs-variable language_\">this</span>;</span><br><span class=\"language-javascript\">\t\t\t\tuni.<span class=\"hljs-title function_\">getSystemInfo</span>(&#123;</span><br><span class=\"language-javascript\">\t\t\t\t\t<span class=\"hljs-attr\">success</span>: <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) &#123;</span><br><span class=\"language-javascript\">\t\t\t\t\t\t_this.<span class=\"hljs-property\">topHeight</span> = res.<span class=\"hljs-property\">statusBarHeight</span></span><br><span class=\"language-javascript\">\t\t\t\t\t\t_this.<span class=\"hljs-property\">windowHeight</span> = res.<span class=\"hljs-property\">windowHeight</span></span><br><span class=\"language-javascript\">\t\t\t\t\t&#125;</span><br><span class=\"language-javascript\">\t\t\t\t&#125;)</span><br><span class=\"language-javascript\">\t\t\t\t<span class=\"hljs-comment\">// #ifdef APP-PLUS</span></span><br><span class=\"language-javascript\">\t\t\t\t<span class=\"hljs-comment\">//自建webview</span></span><br><span class=\"language-javascript\">                <span class=\"hljs-comment\">//如果当前的文件为直接在pages.json声明的vue文件使用this.$scope.$getAppWebview()，</span></span><br><span class=\"language-javascript\">                <span class=\"hljs-comment\">//如果当前的文件为pages.json声明的vue文件引用的子组件，使用this.$parent.$scope.$getAppWebview()</span></span><br><span class=\"language-javascript\">\t\t\t\t<span class=\"hljs-keyword\">var</span> currentWebview = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">$parent</span>.<span class=\"hljs-property\">$scope</span>.$getAppWebview();</span><br><span class=\"language-javascript\">\t\t\t\t<span class=\"hljs-keyword\">var</span> height = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">windowHeight</span> - <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">topHeight</span>;</span><br><span class=\"language-javascript\">\t\t\t\twv = plus.<span class=\"hljs-property\">webview</span>.<span class=\"hljs-title function_\">create</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">url</span>, <span class=\"hljs-string\">&quot;webview&quot;</span>, &#123;</span><br><span class=\"language-javascript\">\t\t\t\t\t<span class=\"hljs-comment\">// plusrequire: &quot;none&quot;, //注释后会无法使用数据交换，请勿放开注释</span></span><br><span class=\"language-javascript\">\t\t\t\t\t<span class=\"hljs-comment\">// &#x27;uni-app&#x27;: &#x27;none&#x27;,//注释后会无法使用数据交换，请勿放开注释</span></span><br><span class=\"language-javascript\">\t\t\t\t\t<span class=\"hljs-attr\">top</span>: <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">topHeight</span> + <span class=\"hljs-number\">20</span>,<span class=\"hljs-comment\">//根据你想要的样式设置top</span></span><br><span class=\"language-javascript\">\t\t\t\t\t<span class=\"hljs-attr\">scalable</span>: <span class=\"hljs-literal\">true</span>,<span class=\"hljs-comment\">//缩放</span></span><br><span class=\"language-javascript\">\t\t\t\t\t<span class=\"hljs-attr\">width</span>: <span class=\"hljs-string\">&#x27;100%&#x27;</span>,<span class=\"hljs-comment\">//根据你想要的样式设置宽度</span></span><br><span class=\"language-javascript\">\t\t\t\t\t<span class=\"hljs-attr\">height</span>: height - <span class=\"hljs-number\">202</span><span class=\"hljs-comment\">//根据你想要的样式设置高度</span></span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">\t\t\t\t&#125;)</span><br><span class=\"language-javascript\">\t\t\t\tcurrentWebview.<span class=\"hljs-title function_\">append</span>(wv);</span><br><span class=\"language-javascript\">\t\t\t\t<span class=\"hljs-comment\">//监听子html页面uni.postMessage返回的值，html页面触发plusMessage事件时会自动调用fun函数，实现对html页面返回值的接收和利用</span></span><br><span class=\"language-javascript\">\t\t\t\t\t<span class=\"hljs-keyword\">let</span> that = <span class=\"hljs-variable language_\">this</span></span><br><span class=\"language-javascript\">\t\t\t\t\t<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">fun</span> = <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">msg</span>) &#123;</span><br><span class=\"language-javascript\">\t\t\t\t\t\t<span class=\"hljs-keyword\">if</span> (msg.<span class=\"hljs-property\">data</span>.<span class=\"hljs-property\">args</span>.<span class=\"hljs-property\">data</span>.<span class=\"hljs-property\">name</span> == <span class=\"hljs-string\">&#x27;postMessage&#x27;</span>) &#123;</span><br><span class=\"language-javascript\">\t\t\t\t\t\t\t<span class=\"hljs-keyword\">let</span> msgData = msg.<span class=\"hljs-property\">data</span>.<span class=\"hljs-property\">args</span>.<span class=\"hljs-property\">data</span>.<span class=\"hljs-property\">arg</span></span><br><span class=\"language-javascript\">\t\t\t\t\t\t\t<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;app接收到消息为:&#x27;</span> + <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(msgData));</span><br><span class=\"language-javascript\">\t\t\t\t\t\t\t</span><br><span class=\"language-javascript\">\t\t\t\t\t\t&#125;</span><br><span class=\"language-javascript\">\t\t\t\t\t&#125;</span><br><span class=\"language-javascript\">\t\t\t\t\tplus.<span class=\"hljs-property\">globalEvent</span>.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">&#x27;plusMessage&#x27;</span>, <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">fun</span>);</span><br><span class=\"language-javascript\">\t\t\t\t<span class=\"hljs-comment\">// #endif</span></span><br><span class=\"language-javascript\">\t\t\t&#125;,</span><br><span class=\"language-javascript\">            <span class=\"hljs-comment\">//调用该函数关闭webview渲染</span></span><br><span class=\"language-javascript\">\t\t\t<span class=\"hljs-title function_\">close</span>(<span class=\"hljs-params\"></span>) &#123;</span><br><span class=\"language-javascript\">\t\t\t\t<span class=\"hljs-comment\">// #ifdef APP-PLUS</span></span><br><span class=\"language-javascript\">\t\t\t\t<span class=\"hljs-keyword\">if</span> (wv) &#123;</span><br><span class=\"language-javascript\">\t\t\t\t\tplus.<span class=\"hljs-property\">webview</span>.<span class=\"hljs-title function_\">close</span>(wv);</span><br><span class=\"language-javascript\">\t\t\t\t\twv = <span class=\"hljs-literal\">null</span></span><br><span class=\"language-javascript\">\t\t\t\t&#125;</span><br><span class=\"language-javascript\">\t\t\t\t<span class=\"hljs-comment\">// #endif</span></span><br><span class=\"language-javascript\">\t\t\t&#125;,</span><br><span class=\"language-javascript\">\t\t\t<span class=\"hljs-comment\">// 发送数据给html页面，本质上是执行了plus渲染的wv上携带的eval() 函数，下面的getData就是html页面要声明的getData函数，通过这种方法传递数据给html页面</span></span><br><span class=\"language-javascript\">\t\t\t<span class=\"hljs-title function_\">evalJs</span>(<span class=\"hljs-params\">msg = <span class=\"hljs-string\">&quot;来自vue页面的参数&quot;</span></span>) &#123;</span><br><span class=\"language-javascript\">\t\t\t\t<span class=\"hljs-comment\">// #ifdef APP-PLUS</span></span><br><span class=\"language-javascript\">\t\t\t\t<span class=\"hljs-keyword\">let</span> str = <span class=\"hljs-string\">`getData(<span class=\"hljs-subst\">$&#123;<span class=\"hljs-built_in\">JSON</span>.stringify(msg)&#125;</span>)`</span></span><br><span class=\"language-javascript\">\t\t\t\t<span class=\"hljs-keyword\">if</span> (wv) &#123;</span><br><span class=\"language-javascript\">\t\t\t\t\twv.evalJS(str);</span><br><span class=\"language-javascript\">\t\t\t\t&#125;</span><br><span class=\"language-javascript\">\t\t\t\t<span class=\"hljs-comment\">// #endif                </span></span><br><span class=\"language-javascript\">\t\t\t&#125;</span><br><span class=\"language-javascript\">  &#125;</span><br><span class=\"language-javascript\">&#125;</span><br><span class=\"language-javascript\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<p>接下来，我们需要在html页面中监听UniAppJSBridgeReady事件，这个事件会在webview加载完成后触发。在这个事件的回调函数中，我们可以获取到webview的对象，然后调用它的postMessage方法，向网页发送数据。这里我们假设要发送的数据是一个字符串”Hello, webview!”。代码如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-keyword\">html</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span>&gt;</span><br>\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span><br>\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">&quot;utf-8&quot;</span> /&gt;</span><br>\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;viewport&quot;</span></span><br><span class=\"hljs-tag\">\t\t\t<span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">&quot;width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no&quot;</span> /&gt;</span><br>\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>map<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span><br>\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span><br><span class=\"language-css\">\t\t\t<span class=\"hljs-selector-tag\">html</span>,</span><br><span class=\"language-css\">\t\t\t<span class=\"hljs-selector-tag\">body</span> &#123;</span><br><span class=\"language-css\">\t\t\t\t<span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">100%</span>;</span><br><span class=\"language-css\">\t\t\t\t<span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">0</span>;</span><br><span class=\"language-css\">\t\t\t\t<span class=\"hljs-attribute\">overflow</span>: hidden;</span><br><span class=\"language-css\">\t\t\t&#125;</span><br><span class=\"language-css\">\t\t</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br>\t\t<span class=\"hljs-comment\">&lt;!-- 重要,引入了才能交互数据,具体文件可以在uniapp官网下载 --&gt;</span><br>\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;./js/uni.webview.1.5.4.js&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br><br>\t<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span><br>\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span><br>\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;postData&quot;</span>&gt;</span>给app的页面发送数据<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span><br>\t<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span><br>\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">\t\t<span class=\"hljs-comment\">//组件通信</span></span><br><span class=\"language-javascript\">\t\t<span class=\"hljs-comment\">//发送数据到vue组件</span></span><br><span class=\"language-javascript\">\t\t\t<span class=\"hljs-comment\">//UniAppJSBridgeReady事件会在uni.webview.js相关代码加载完成后触发,触发后就可以使用postMessage方法发送数据,一般可以在这个事件里调用一次postMessage来判断代码是否正常运行.</span></span><br><span class=\"language-javascript\">\t\t<span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">&#x27;UniAppJSBridgeReady&#x27;</span>, <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) &#123;</span><br><span class=\"language-javascript\">\t\t\t<span class=\"hljs-keyword\">let</span> message = &#123;</span><br><span class=\"language-javascript\">\t\t\t\t<span class=\"hljs-attr\">action</span>: <span class=\"hljs-string\">&#x27;hello world&#x27;</span></span><br><span class=\"language-javascript\">\t\t\t&#125;</span><br><span class=\"language-javascript\">\t\t\tuni.<span class=\"hljs-title function_\">postMessage</span>(&#123;</span><br><span class=\"language-javascript\">\t\t\t\t<span class=\"hljs-attr\">data</span>: message</span><br><span class=\"language-javascript\">\t\t\t&#125;);</span><br><span class=\"language-javascript\">\t\t&#125;);</span><br><span class=\"language-javascript\">\t\t<span class=\"hljs-comment\">//自定义按钮数据发送</span></span><br><span class=\"language-javascript\">\t\t<span class=\"hljs-keyword\">let</span> btn = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">&quot;postData&quot;</span>)</span><br><span class=\"language-javascript\">\t\tbtn.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">&quot;click&quot;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"language-javascript\">\t\t\tuni.<span class=\"hljs-title function_\">postMessage</span>(&#123;</span><br><span class=\"language-javascript\">\t\t\t\t<span class=\"hljs-attr\">data</span>: &#123;</span><br><span class=\"language-javascript\">\t\t\t\t\t<span class=\"hljs-attr\">action</span>: <span class=\"hljs-string\">&quot;Hello, webview!&quot;</span>, <span class=\"hljs-comment\">// 这是传的参数</span></span><br><span class=\"language-javascript\">\t\t\t\t&#125;,</span><br><span class=\"language-javascript\">\t\t\t&#125;);</span><br><span class=\"language-javascript\">\t\t&#125;)</span><br><span class=\"language-javascript\">\t\t<span class=\"hljs-comment\">//接收vue组件的数据</span></span><br><span class=\"language-javascript\">\t\t<span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">getData</span> = <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">msgList</span>) &#123;</span><br><span class=\"language-javascript\">\t\t\t<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;接收vue组件传递来的数据：&#x27;</span> + <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(msgList));</span><br><span class=\"language-javascript\">\t\t&#125;</span><br><span class=\"language-javascript\">\t</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<p>总结一下，使用webview组件时，我们可以利用evalJS方法和postMessage方法，来实现vue页面和webview之间的双向数据交换。这样，我们就可以在uniapp中灵活地使用webview组件，来加载一些本地或远程的网页，并与它们进行通信,如果需要的就是全屏加载webview，那就不必使用本文的方法了，webview组件使用更方便一些，但是如果你需要更复杂的交互，还是自建webview更合理一些。</p>\n","more":"<p>在uniapp开发中，有时候我们需要在vue页面中嵌入一个webview组件，用来加载一些本地或远程的网页。但是，如何在vue页面和webview之间实现数据的传递和通信呢？常用的方法是使用uniapp官方提供的组件webview ,使用uni-app提供的UniAppJSBridgeReady事件和postMessage方法，来实现vue页面和webview之间的双向数据交换。但是这种方法有一定的局限性，webview组件设置的宽高等样式只有h5有效，在app中显示只能全屏加载，无法在app中实现vue页面和webview同屏交互，本文将介绍另一种自建webview的方法，可以在app中自定义webview的宽高及显隐。</p>\n<p>首先，我们需要在vue页面中自建一个webview组件，代码如下，下面的代码自建了webview，并且完成了vue页面对html页面数据的接收和发送：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">template</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">template</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\"></span><br><span class=\"language-javascript\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> &#123;</span><br><span class=\"language-javascript\">  <span class=\"hljs-title function_\">data</span>(<span class=\"hljs-params\"></span>) &#123;</span><br><span class=\"language-javascript\">    <span class=\"hljs-keyword\">return</span> &#123;</span><br><span class=\"language-javascript\">        <span class=\"hljs-attr\">topHeight</span>: <span class=\"hljs-number\">0</span>,</span><br><span class=\"language-javascript\">\t    <span class=\"hljs-attr\">windowHeight</span>: <span class=\"hljs-number\">0</span>,</span><br><span class=\"language-javascript\">\t\t<span class=\"hljs-attr\">url</span>: <span class=\"hljs-string\">&quot;/hybrid/html/test.html&quot;</span>,</span><br><span class=\"language-javascript\">\t\t<span class=\"hljs-attr\">fun</span>: <span class=\"hljs-literal\">null</span>,</span><br><span class=\"language-javascript\">    &#125;</span><br><span class=\"language-javascript\">  &#125;,</span><br><span class=\"language-javascript\">  <span class=\"hljs-attr\">methods</span>: &#123;</span><br><span class=\"language-javascript\">            <span class=\"hljs-comment\">//初始化</span></span><br><span class=\"language-javascript\">            <span class=\"hljs-title function_\">init</span>(<span class=\"hljs-params\"></span>) &#123;</span><br><span class=\"language-javascript\">\t\t\t\t<span class=\"hljs-comment\">// 获取系统信息，用于设置webview位置</span></span><br><span class=\"language-javascript\">\t\t\t\t<span class=\"hljs-keyword\">var</span> _this = <span class=\"hljs-variable language_\">this</span>;</span><br><span class=\"language-javascript\">\t\t\t\tuni.<span class=\"hljs-title function_\">getSystemInfo</span>(&#123;</span><br><span class=\"language-javascript\">\t\t\t\t\t<span class=\"hljs-attr\">success</span>: <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">res</span>) &#123;</span><br><span class=\"language-javascript\">\t\t\t\t\t\t_this.<span class=\"hljs-property\">topHeight</span> = res.<span class=\"hljs-property\">statusBarHeight</span></span><br><span class=\"language-javascript\">\t\t\t\t\t\t_this.<span class=\"hljs-property\">windowHeight</span> = res.<span class=\"hljs-property\">windowHeight</span></span><br><span class=\"language-javascript\">\t\t\t\t\t&#125;</span><br><span class=\"language-javascript\">\t\t\t\t&#125;)</span><br><span class=\"language-javascript\">\t\t\t\t<span class=\"hljs-comment\">// #ifdef APP-PLUS</span></span><br><span class=\"language-javascript\">\t\t\t\t<span class=\"hljs-comment\">//自建webview</span></span><br><span class=\"language-javascript\">                <span class=\"hljs-comment\">//如果当前的文件为直接在pages.json声明的vue文件使用this.$scope.$getAppWebview()，</span></span><br><span class=\"language-javascript\">                <span class=\"hljs-comment\">//如果当前的文件为pages.json声明的vue文件引用的子组件，使用this.$parent.$scope.$getAppWebview()</span></span><br><span class=\"language-javascript\">\t\t\t\t<span class=\"hljs-keyword\">var</span> currentWebview = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">$parent</span>.<span class=\"hljs-property\">$scope</span>.$getAppWebview();</span><br><span class=\"language-javascript\">\t\t\t\t<span class=\"hljs-keyword\">var</span> height = <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">windowHeight</span> - <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">topHeight</span>;</span><br><span class=\"language-javascript\">\t\t\t\twv = plus.<span class=\"hljs-property\">webview</span>.<span class=\"hljs-title function_\">create</span>(<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">url</span>, <span class=\"hljs-string\">&quot;webview&quot;</span>, &#123;</span><br><span class=\"language-javascript\">\t\t\t\t\t<span class=\"hljs-comment\">// plusrequire: &quot;none&quot;, //注释后会无法使用数据交换，请勿放开注释</span></span><br><span class=\"language-javascript\">\t\t\t\t\t<span class=\"hljs-comment\">// &#x27;uni-app&#x27;: &#x27;none&#x27;,//注释后会无法使用数据交换，请勿放开注释</span></span><br><span class=\"language-javascript\">\t\t\t\t\t<span class=\"hljs-attr\">top</span>: <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">topHeight</span> + <span class=\"hljs-number\">20</span>,<span class=\"hljs-comment\">//根据你想要的样式设置top</span></span><br><span class=\"language-javascript\">\t\t\t\t\t<span class=\"hljs-attr\">scalable</span>: <span class=\"hljs-literal\">true</span>,<span class=\"hljs-comment\">//缩放</span></span><br><span class=\"language-javascript\">\t\t\t\t\t<span class=\"hljs-attr\">width</span>: <span class=\"hljs-string\">&#x27;100%&#x27;</span>,<span class=\"hljs-comment\">//根据你想要的样式设置宽度</span></span><br><span class=\"language-javascript\">\t\t\t\t\t<span class=\"hljs-attr\">height</span>: height - <span class=\"hljs-number\">202</span><span class=\"hljs-comment\">//根据你想要的样式设置高度</span></span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">\t\t\t\t&#125;)</span><br><span class=\"language-javascript\">\t\t\t\tcurrentWebview.<span class=\"hljs-title function_\">append</span>(wv);</span><br><span class=\"language-javascript\">\t\t\t\t<span class=\"hljs-comment\">//监听子html页面uni.postMessage返回的值，html页面触发plusMessage事件时会自动调用fun函数，实现对html页面返回值的接收和利用</span></span><br><span class=\"language-javascript\">\t\t\t\t\t<span class=\"hljs-keyword\">let</span> that = <span class=\"hljs-variable language_\">this</span></span><br><span class=\"language-javascript\">\t\t\t\t\t<span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">fun</span> = <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">msg</span>) &#123;</span><br><span class=\"language-javascript\">\t\t\t\t\t\t<span class=\"hljs-keyword\">if</span> (msg.<span class=\"hljs-property\">data</span>.<span class=\"hljs-property\">args</span>.<span class=\"hljs-property\">data</span>.<span class=\"hljs-property\">name</span> == <span class=\"hljs-string\">&#x27;postMessage&#x27;</span>) &#123;</span><br><span class=\"language-javascript\">\t\t\t\t\t\t\t<span class=\"hljs-keyword\">let</span> msgData = msg.<span class=\"hljs-property\">data</span>.<span class=\"hljs-property\">args</span>.<span class=\"hljs-property\">data</span>.<span class=\"hljs-property\">arg</span></span><br><span class=\"language-javascript\">\t\t\t\t\t\t\t<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;app接收到消息为:&#x27;</span> + <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(msgData));</span><br><span class=\"language-javascript\">\t\t\t\t\t\t\t</span><br><span class=\"language-javascript\">\t\t\t\t\t\t&#125;</span><br><span class=\"language-javascript\">\t\t\t\t\t&#125;</span><br><span class=\"language-javascript\">\t\t\t\t\tplus.<span class=\"hljs-property\">globalEvent</span>.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">&#x27;plusMessage&#x27;</span>, <span class=\"hljs-variable language_\">this</span>.<span class=\"hljs-property\">fun</span>);</span><br><span class=\"language-javascript\">\t\t\t\t<span class=\"hljs-comment\">// #endif</span></span><br><span class=\"language-javascript\">\t\t\t&#125;,</span><br><span class=\"language-javascript\">            <span class=\"hljs-comment\">//调用该函数关闭webview渲染</span></span><br><span class=\"language-javascript\">\t\t\t<span class=\"hljs-title function_\">close</span>(<span class=\"hljs-params\"></span>) &#123;</span><br><span class=\"language-javascript\">\t\t\t\t<span class=\"hljs-comment\">// #ifdef APP-PLUS</span></span><br><span class=\"language-javascript\">\t\t\t\t<span class=\"hljs-keyword\">if</span> (wv) &#123;</span><br><span class=\"language-javascript\">\t\t\t\t\tplus.<span class=\"hljs-property\">webview</span>.<span class=\"hljs-title function_\">close</span>(wv);</span><br><span class=\"language-javascript\">\t\t\t\t\twv = <span class=\"hljs-literal\">null</span></span><br><span class=\"language-javascript\">\t\t\t\t&#125;</span><br><span class=\"language-javascript\">\t\t\t\t<span class=\"hljs-comment\">// #endif</span></span><br><span class=\"language-javascript\">\t\t\t&#125;,</span><br><span class=\"language-javascript\">\t\t\t<span class=\"hljs-comment\">// 发送数据给html页面，本质上是执行了plus渲染的wv上携带的eval() 函数，下面的getData就是html页面要声明的getData函数，通过这种方法传递数据给html页面</span></span><br><span class=\"language-javascript\">\t\t\t<span class=\"hljs-title function_\">evalJs</span>(<span class=\"hljs-params\">msg = <span class=\"hljs-string\">&quot;来自vue页面的参数&quot;</span></span>) &#123;</span><br><span class=\"language-javascript\">\t\t\t\t<span class=\"hljs-comment\">// #ifdef APP-PLUS</span></span><br><span class=\"language-javascript\">\t\t\t\t<span class=\"hljs-keyword\">let</span> str = <span class=\"hljs-string\">`getData(<span class=\"hljs-subst\">$&#123;<span class=\"hljs-built_in\">JSON</span>.stringify(msg)&#125;</span>)`</span></span><br><span class=\"language-javascript\">\t\t\t\t<span class=\"hljs-keyword\">if</span> (wv) &#123;</span><br><span class=\"language-javascript\">\t\t\t\t\twv.evalJS(str);</span><br><span class=\"language-javascript\">\t\t\t\t&#125;</span><br><span class=\"language-javascript\">\t\t\t\t<span class=\"hljs-comment\">// #endif                </span></span><br><span class=\"language-javascript\">\t\t\t&#125;</span><br><span class=\"language-javascript\">  &#125;</span><br><span class=\"language-javascript\">&#125;</span><br><span class=\"language-javascript\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<p>接下来，我们需要在html页面中监听UniAppJSBridgeReady事件，这个事件会在webview加载完成后触发。在这个事件的回调函数中，我们可以获取到webview的对象，然后调用它的postMessage方法，向网页发送数据。这里我们假设要发送的数据是一个字符串”Hello, webview!”。代码如下：</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-meta\">&lt;!DOCTYPE <span class=\"hljs-keyword\">html</span>&gt;</span><br><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span>&gt;</span><br>\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">head</span>&gt;</span><br>\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">charset</span>=<span class=\"hljs-string\">&quot;utf-8&quot;</span> /&gt;</span><br>\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">meta</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;viewport&quot;</span></span><br><span class=\"hljs-tag\">\t\t\t<span class=\"hljs-attr\">content</span>=<span class=\"hljs-string\">&quot;width=device-width,initial-scale=1,minimum-scale=1,maximum-scale=1,user-scalable=no&quot;</span> /&gt;</span><br>\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">title</span>&gt;</span>map<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">title</span>&gt;</span><br>\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">style</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;text/css&quot;</span>&gt;</span><span class=\"language-css\"></span><br><span class=\"language-css\">\t\t\t<span class=\"hljs-selector-tag\">html</span>,</span><br><span class=\"language-css\">\t\t\t<span class=\"hljs-selector-tag\">body</span> &#123;</span><br><span class=\"language-css\">\t\t\t\t<span class=\"hljs-attribute\">height</span>: <span class=\"hljs-number\">100%</span>;</span><br><span class=\"language-css\">\t\t\t\t<span class=\"hljs-attribute\">margin</span>: <span class=\"hljs-number\">0</span>;</span><br><span class=\"language-css\">\t\t\t\t<span class=\"hljs-attribute\">overflow</span>: hidden;</span><br><span class=\"language-css\">\t\t\t&#125;</span><br><span class=\"language-css\">\t\t</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">style</span>&gt;</span><br>\t\t<span class=\"hljs-comment\">&lt;!-- 重要,引入了才能交互数据,具体文件可以在uniapp官网下载 --&gt;</span><br>\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;./js/uni.webview.1.5.4.js&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br><br>\t<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">head</span>&gt;</span><br>\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span><br>\t\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">button</span> <span class=\"hljs-attr\">id</span>=<span class=\"hljs-string\">&quot;postData&quot;</span>&gt;</span>给app的页面发送数据<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">button</span>&gt;</span><br>\t<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span><br>\t<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">\t\t<span class=\"hljs-comment\">//组件通信</span></span><br><span class=\"language-javascript\">\t\t<span class=\"hljs-comment\">//发送数据到vue组件</span></span><br><span class=\"language-javascript\">\t\t\t<span class=\"hljs-comment\">//UniAppJSBridgeReady事件会在uni.webview.js相关代码加载完成后触发,触发后就可以使用postMessage方法发送数据,一般可以在这个事件里调用一次postMessage来判断代码是否正常运行.</span></span><br><span class=\"language-javascript\">\t\t<span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">&#x27;UniAppJSBridgeReady&#x27;</span>, <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) &#123;</span><br><span class=\"language-javascript\">\t\t\t<span class=\"hljs-keyword\">let</span> message = &#123;</span><br><span class=\"language-javascript\">\t\t\t\t<span class=\"hljs-attr\">action</span>: <span class=\"hljs-string\">&#x27;hello world&#x27;</span></span><br><span class=\"language-javascript\">\t\t\t&#125;</span><br><span class=\"language-javascript\">\t\t\tuni.<span class=\"hljs-title function_\">postMessage</span>(&#123;</span><br><span class=\"language-javascript\">\t\t\t\t<span class=\"hljs-attr\">data</span>: message</span><br><span class=\"language-javascript\">\t\t\t&#125;);</span><br><span class=\"language-javascript\">\t\t&#125;);</span><br><span class=\"language-javascript\">\t\t<span class=\"hljs-comment\">//自定义按钮数据发送</span></span><br><span class=\"language-javascript\">\t\t<span class=\"hljs-keyword\">let</span> btn = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">getElementById</span>(<span class=\"hljs-string\">&quot;postData&quot;</span>)</span><br><span class=\"language-javascript\">\t\tbtn.<span class=\"hljs-title function_\">addEventListener</span>(<span class=\"hljs-string\">&quot;click&quot;</span>, <span class=\"hljs-function\">(<span class=\"hljs-params\">e</span>) =&gt;</span> &#123;</span><br><span class=\"language-javascript\">\t\t\tuni.<span class=\"hljs-title function_\">postMessage</span>(&#123;</span><br><span class=\"language-javascript\">\t\t\t\t<span class=\"hljs-attr\">data</span>: &#123;</span><br><span class=\"language-javascript\">\t\t\t\t\t<span class=\"hljs-attr\">action</span>: <span class=\"hljs-string\">&quot;Hello, webview!&quot;</span>, <span class=\"hljs-comment\">// 这是传的参数</span></span><br><span class=\"language-javascript\">\t\t\t\t&#125;,</span><br><span class=\"language-javascript\">\t\t\t&#125;);</span><br><span class=\"language-javascript\">\t\t&#125;)</span><br><span class=\"language-javascript\">\t\t<span class=\"hljs-comment\">//接收vue组件的数据</span></span><br><span class=\"language-javascript\">\t\t<span class=\"hljs-variable language_\">window</span>.<span class=\"hljs-property\">getData</span> = <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">msgList</span>) &#123;</span><br><span class=\"language-javascript\">\t\t\t<span class=\"hljs-variable language_\">console</span>.<span class=\"hljs-title function_\">log</span>(<span class=\"hljs-string\">&#x27;接收vue组件传递来的数据：&#x27;</span> + <span class=\"hljs-title class_\">JSON</span>.<span class=\"hljs-title function_\">stringify</span>(msgList));</span><br><span class=\"language-javascript\">\t\t&#125;</span><br><span class=\"language-javascript\">\t</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<p>总结一下，使用webview组件时，我们可以利用evalJS方法和postMessage方法，来实现vue页面和webview之间的双向数据交换。这样，我们就可以在uniapp中灵活地使用webview组件，来加载一些本地或远程的网页，并与它们进行通信,如果需要的就是全屏加载webview，那就不必使用本文的方法了，webview组件使用更方便一些，但是如果你需要更复杂的交互，还是自建webview更合理一些。</p>\n","categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"uniapp,webview","path":"api/tags/uniapp,webview.json"}]}