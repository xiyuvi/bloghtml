{"title":"解决nodejs更新到v18后旧项目报错","slug":"23","date":"2023-02-12T09:25:18.000Z","updated":"2023-02-12T09:25:18.000Z","comments":true,"path":"api/articles/23.json","excerpt":null,"covers":["/2023/02/12/23/1.webp"],"content":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>去年我发现使用的电脑性能太差了，同时开两个项目内存就会爆满，导致各种卡顿及闪退，用起来很不爽，我就自费买了个8g内存，组成16g后内存占用明显缓解了，启动两个项目基本上只占用一半内存。然后我又发现第二个问题：笔记本的温度不对，长期运行待机下，温度能达到90度撞到功耗墙，同时能闻到一股烧硬塑料的味道，摸了一下出风口几乎没有风力，我又自费给笔记本清了一下灰，真是自费上班第一人，维修工程师拆机涂硅脂清灰一气呵成，我看他清理出了大片结块的灰尘，就是这玩意堵住了出风口。清灰后果然好了很多，鲁大师烤机10分钟 温度温度60+度。<br>但是启动项目还是很慢，以及npm i安装新的依赖时偶尔会报错，重新安装能解决。删除依赖包的速度很慢，反正不是一个合格的固态硬盘的速度，硬盘我也不方便换，只能另想办法了。于是就想到之前看新闻说nodejs18更换了最新的v8引擎，性能提升很大，于是就…</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">nvm</span> install <span class=\"hljs-number\">18</span>.<span class=\"hljs-number\">13</span>.<span class=\"hljs-number\">0</span><br><span class=\"hljs-attribute\">nvm</span> use <span class=\"hljs-number\">18</span>.<span class=\"hljs-number\">13</span>.<span class=\"hljs-number\">0</span><br></code></pre></td></tr></table></figure>\n<h2 id=\"报错及解决\"><a href=\"#报错及解决\" class=\"headerlink\" title=\"报错及解决\"></a>报错及解决</h2><p>安装完最新版本神清气爽，立马npm run dev启动项目，发现报了个错</p>\n<figure class=\"highlight sml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sml\">&#123;<br>  opensslErrorStack: [ <span class=\"hljs-symbol\">&#x27;error</span>:<span class=\"hljs-number\">03000086</span>:digital envelope routines::initialization error&#x27; ],<br>  library: <span class=\"hljs-symbol\">&#x27;digital</span> envelope routines&#x27;,<br>  reason: <span class=\"hljs-symbol\">&#x27;unsupported&#x27;</span>,<br>  code: <span class=\"hljs-symbol\">&#x27;ERR_OSSL_EVP_UNSUPPORTED&#x27;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<p>搜索引擎搜索后，是nodev17以后的版本都不支持openssl的一个加密算法了，解决方法也很简单 在环境变量-系统变量中添加变量名”NODE_OPTIONS”, 变量值”–openssl-legacy-provider”,重启电脑后再运行旧项目，就可以跳过这个报错正常启动了。<br> <img src=\"/2023/02/12/23/1.webp\" alt=\"系统变量\"> </p>\n<h2 id=\"我踩过的坑\"><a href=\"#我踩过的坑\" class=\"headerlink\" title=\"我踩过的坑\"></a>我踩过的坑</h2><p>一般情况下上个步骤修改环境变量就可以了，但是我添加环境变量始终无效，一直报这个错，不知原因，于是开始了漫长的踩坑之路。首先改为采用另一种解决方法：配置临时变量。<br>即先设置临时变量，再运行项目</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\"><span class=\"hljs-built_in\">set</span> <span class=\"hljs-attribute\">NODE_OPTIONS</span>=--openssl-legacy-provider<br>npm <span class=\"hljs-built_in\">run</span> dev<br></code></pre></td></tr></table></figure>\n<p>这样也不无法运行项目，改为另一种解决方案：在dev的命令里配置node临时变量并启动项目。<br>即把package.json中的</p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs jboss-cli\"><span class=\"hljs-string\">...</span><br><span class=\"hljs-string\">&quot;scripts&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;dev&quot;</span>: <span class=\"hljs-string\">&quot;vue-cli-service serve&quot;</span>,<br>    <span class=\"hljs-string\">...</span><br>  &#125;,<br><span class=\"hljs-string\">...</span><br></code></pre></td></tr></table></figure>\n<p>改为</p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs jboss-cli\"><span class=\"hljs-string\">...</span><br><span class=\"hljs-string\">&quot;scripts&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;dev&quot;</span>: <span class=\"hljs-string\">&quot;SET NODE_OPTIONS=--openssl-legacy-provider &amp;&amp;vue-cli-service serve&quot;</span>,<br>    <span class=\"hljs-string\">...</span><br>  &#125;,<br><span class=\"hljs-string\">...</span><br></code></pre></td></tr></table></figure>\n<p>然后再npm run dev，这样成功运行老项目了，但是！！！多人协作项目我不可能把这玩意提交到仓库去，也不可能每次手动改自己本地的package.json文件，那也太蠢了。绕了一圈又回到最开始，先搞清楚为什么环境变量无效，我一直使用的是vscode的终端，在终端输入</p>\n<figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs elixir\"><span class=\"hljs-variable\">$env</span><span class=\"hljs-symbol\">:NODE_OPTIONS</span><br></code></pre></td></tr></table></figure>\n<p>打印为空，再输入</p>\n<figure class=\"highlight moonscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs moonscript\"><span class=\"hljs-name\">$env</span>:Path<br><span class=\"hljs-name\">C</span>:\\ProgramData\\Anaconda3;<span class=\"hljs-name\">C</span>:\\ProgramData\\Anaconda3\\Library\\mingw-w64\\bin;...<br></code></pre></td></tr></table></figure>\n<p>能打印出这个原来就配好的环境变量Path，打不开NODE_OPTIONS。我又去win10的系统变量里反复确认我添加好了，这就奇怪了，我又打开系统的powershell打印变量，奇迹出现了</p>\n<figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs elixir\"><span class=\"hljs-variable\">$env</span><span class=\"hljs-symbol\">:NODE_OPTIONS</span><br>--openssl-legacy-provider<br></code></pre></td></tr></table></figure>\n<p>powershell能打印出NODE_OPTIONS，原来是vscode的bug，它没有正确的加载到最新的环境变量，而我一直没有怀疑是vscode的原因，害我排除了这么久的问题，虽然也有一些收获。我猜重新安装vscode能解决这个bug，但我已经不想折腾了，以后只在powershell里npm run dev启动项目就行了，哪天有空再重装vscode吧。对了，升级后性能是有提升，启动项目快了，内存占用也更稳定了。</p>\n","more":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>去年我发现使用的电脑性能太差了，同时开两个项目内存就会爆满，导致各种卡顿及闪退，用起来很不爽，我就自费买了个8g内存，组成16g后内存占用明显缓解了，启动两个项目基本上只占用一半内存。然后我又发现第二个问题：笔记本的温度不对，长期运行待机下，温度能达到90度撞到功耗墙，同时能闻到一股烧硬塑料的味道，摸了一下出风口几乎没有风力，我又自费给笔记本清了一下灰，真是自费上班第一人，维修工程师拆机涂硅脂清灰一气呵成，我看他清理出了大片结块的灰尘，就是这玩意堵住了出风口。清灰后果然好了很多，鲁大师烤机10分钟 温度温度60+度。<br>但是启动项目还是很慢，以及npm i安装新的依赖时偶尔会报错，重新安装能解决。删除依赖包的速度很慢，反正不是一个合格的固态硬盘的速度，硬盘我也不方便换，只能另想办法了。于是就想到之前看新闻说nodejs18更换了最新的v8引擎，性能提升很大，于是就…</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs apache\"><span class=\"hljs-attribute\">nvm</span> install <span class=\"hljs-number\">18</span>.<span class=\"hljs-number\">13</span>.<span class=\"hljs-number\">0</span><br><span class=\"hljs-attribute\">nvm</span> use <span class=\"hljs-number\">18</span>.<span class=\"hljs-number\">13</span>.<span class=\"hljs-number\">0</span><br></code></pre></td></tr></table></figure>\n<h2 id=\"报错及解决\"><a href=\"#报错及解决\" class=\"headerlink\" title=\"报错及解决\"></a>报错及解决</h2><p>安装完最新版本神清气爽，立马npm run dev启动项目，发现报了个错</p>\n<figure class=\"highlight sml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs sml\">&#123;<br>  opensslErrorStack: [ <span class=\"hljs-symbol\">&#x27;error</span>:<span class=\"hljs-number\">03000086</span>:digital envelope routines::initialization error&#x27; ],<br>  library: <span class=\"hljs-symbol\">&#x27;digital</span> envelope routines&#x27;,<br>  reason: <span class=\"hljs-symbol\">&#x27;unsupported&#x27;</span>,<br>  code: <span class=\"hljs-symbol\">&#x27;ERR_OSSL_EVP_UNSUPPORTED&#x27;</span><br>&#125;<br></code></pre></td></tr></table></figure>\n<p>搜索引擎搜索后，是nodev17以后的版本都不支持openssl的一个加密算法了，解决方法也很简单 在环境变量-系统变量中添加变量名”NODE_OPTIONS”, 变量值”–openssl-legacy-provider”,重启电脑后再运行旧项目，就可以跳过这个报错正常启动了。<br> <img src=\"/2023/02/12/23/1.webp\" alt=\"系统变量\"> </p>\n<h2 id=\"我踩过的坑\"><a href=\"#我踩过的坑\" class=\"headerlink\" title=\"我踩过的坑\"></a>我踩过的坑</h2><p>一般情况下上个步骤修改环境变量就可以了，但是我添加环境变量始终无效，一直报这个错，不知原因，于是开始了漫长的踩坑之路。首先改为采用另一种解决方法：配置临时变量。<br>即先设置临时变量，再运行项目</p>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs routeros\"><span class=\"hljs-built_in\">set</span> <span class=\"hljs-attribute\">NODE_OPTIONS</span>=--openssl-legacy-provider<br>npm <span class=\"hljs-built_in\">run</span> dev<br></code></pre></td></tr></table></figure>\n<p>这样也不无法运行项目，改为另一种解决方案：在dev的命令里配置node临时变量并启动项目。<br>即把package.json中的</p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs jboss-cli\"><span class=\"hljs-string\">...</span><br><span class=\"hljs-string\">&quot;scripts&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;dev&quot;</span>: <span class=\"hljs-string\">&quot;vue-cli-service serve&quot;</span>,<br>    <span class=\"hljs-string\">...</span><br>  &#125;,<br><span class=\"hljs-string\">...</span><br></code></pre></td></tr></table></figure>\n<p>改为</p>\n<figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs jboss-cli\"><span class=\"hljs-string\">...</span><br><span class=\"hljs-string\">&quot;scripts&quot;</span>: &#123;<br>    <span class=\"hljs-string\">&quot;dev&quot;</span>: <span class=\"hljs-string\">&quot;SET NODE_OPTIONS=--openssl-legacy-provider &amp;&amp;vue-cli-service serve&quot;</span>,<br>    <span class=\"hljs-string\">...</span><br>  &#125;,<br><span class=\"hljs-string\">...</span><br></code></pre></td></tr></table></figure>\n<p>然后再npm run dev，这样成功运行老项目了，但是！！！多人协作项目我不可能把这玩意提交到仓库去，也不可能每次手动改自己本地的package.json文件，那也太蠢了。绕了一圈又回到最开始，先搞清楚为什么环境变量无效，我一直使用的是vscode的终端，在终端输入</p>\n<figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs elixir\"><span class=\"hljs-variable\">$env</span><span class=\"hljs-symbol\">:NODE_OPTIONS</span><br></code></pre></td></tr></table></figure>\n<p>打印为空，再输入</p>\n<figure class=\"highlight moonscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs moonscript\"><span class=\"hljs-name\">$env</span>:Path<br><span class=\"hljs-name\">C</span>:\\ProgramData\\Anaconda3;<span class=\"hljs-name\">C</span>:\\ProgramData\\Anaconda3\\Library\\mingw-w64\\bin;...<br></code></pre></td></tr></table></figure>\n<p>能打印出这个原来就配好的环境变量Path，打不开NODE_OPTIONS。我又去win10的系统变量里反复确认我添加好了，这就奇怪了，我又打开系统的powershell打印变量，奇迹出现了</p>\n<figure class=\"highlight elixir\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs elixir\"><span class=\"hljs-variable\">$env</span><span class=\"hljs-symbol\">:NODE_OPTIONS</span><br>--openssl-legacy-provider<br></code></pre></td></tr></table></figure>\n<p>powershell能打印出NODE_OPTIONS，原来是vscode的bug，它没有正确的加载到最新的环境变量，而我一直没有怀疑是vscode的原因，害我排除了这么久的问题，虽然也有一些收获。我猜重新安装vscode能解决这个bug，但我已经不想折腾了，以后只在powershell里npm run dev启动项目就行了，哪天有空再重装vscode吧。对了，升级后性能是有提升，启动项目快了，内存占用也更稳定了。</p>\n","categories":[{"name":"IT","path":"api/categories/IT.json"},{"name":"日记","path":"api/categories/日记.json"}],"tags":[{"name":"nodeJs","path":"api/tags/nodeJs.json"}]}