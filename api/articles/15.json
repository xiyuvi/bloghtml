{"title":"利用crypto-js实现静态网页数据加密","slug":"15","date":"2022-02-27T09:28:50.000Z","updated":"2022-02-27T09:28:50.000Z","comments":true,"path":"api/articles/15.json","excerpt":null,"covers":["/img/15/0.webp","/2022/02/27/15/demo1.webp","/2022/02/27/15/demo2.webp","/2022/02/27/15/demo3.webp"],"content":"<h2 id=\"crypto-js是什么\"><a href=\"#crypto-js是什么\" class=\"headerlink\" title=\"crypto-js是什么\"></a>crypto-js是什么</h2><p>使用crypto-js也是很久之前的事了，一直都没有好好整理，今天借助博客重构的机会，好好捋一下。crypto-js是一个加密算法库，支持哈希算法，如：MD5、SHA-1、SHA-2、SHA-3、RIPEMD-160也支持多种加密方式，如：AES、DES, Triple DES、Rabbit、RC4, RC4Drop。可实现多种多样的加密算法。<br><img src=\"/img/15/0.webp\" alt=\"利用crypto-js实现静态网页数据加密\"></p>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><p>在<a href=\"https://github.com/brix/crypto-js\">github.com&#x2F;brix&#x2F;crypto-js</a> 上引入相关文件，因为我只需要使用aes加密算法，所以没有引入整个库而是只下载了aes.js单个文件。<br>借助强大的crypto-js，我们只需要几行代码就可以实现加密效果，下面是一个使用aes加密的demo，效果为在页面加密字符串“123456”，并解密加密的密文。</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">&lt;!DOCTYPE html&gt;<br>&lt;html lang=&quot;en&quot;&gt;<br><br>&lt;head&gt;<br>    &lt;meta charset=&quot;UTF-8&quot;&gt;<br>    &lt;title&gt;Title&lt;/title&gt;<br>    &lt;script src=&quot;./aes.js&quot;&gt;&lt;/script&gt;<br>&lt;/head&gt;<br><br>&lt;body&gt;<br>    &lt;script&gt;<br>        //aes加密<br>        <span class=\"hljs-keyword\">function</span> encrypt(word) &#123;<br>            var key = CryptoJS.enc.Utf8.parse(&quot;1234560000000000&quot;); //<span class=\"hljs-number\">16</span>位<br>            var iv = CryptoJS.enc.Utf8.parse(&quot;1234567890000000&quot;);<br>            var <span class=\"hljs-keyword\">encrypted</span> = <span class=\"hljs-string\">&#x27;&#x27;</span>;<br>            <span class=\"hljs-keyword\">if</span> (typeof (word) == <span class=\"hljs-string\">&#x27;string&#x27;</span>) &#123;<br>                var srcs = CryptoJS.enc.Utf8.parse(word);<br>                <span class=\"hljs-keyword\">encrypted</span> = CryptoJS.AES.encrypt(srcs, key, &#123;<br>                    iv: iv,<br>                    mode: CryptoJS.mode.CBC,<br>                    padding: CryptoJS.pad.Pkcs7<br>                &#125;);<br>            &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (typeof (word) == <span class=\"hljs-string\">&#x27;object&#x27;</span>) &#123; //对象格式的转成<span class=\"hljs-type\">json</span>字符串<br>                data = <span class=\"hljs-type\">JSON</span>.stringify(word);<br>                var srcs = CryptoJS.enc.Utf8.parse(data);<br>                <span class=\"hljs-keyword\">encrypted</span> = CryptoJS.AES.encrypt(srcs, key, &#123;<br>                    iv: iv,<br>                    mode: CryptoJS.mode.CBC,<br>                    padding: CryptoJS.pad.Pkcs7<br>                &#125;)<br>            &#125;<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">encrypted</span>.ciphertext.toString();<br>        &#125;<br>        // aes解密<br>        <span class=\"hljs-keyword\">function</span> decrypt(word) &#123;<br>            var key = CryptoJS.enc.Utf8.parse(&quot;1234560000000000&quot;);<br>            var iv = CryptoJS.enc.Utf8.parse(&quot;1234567890000000&quot;);<br>            var encryptedHexStr = CryptoJS.enc.Hex.parse(word);<br>            var srcs = CryptoJS.enc.Base64.stringify(encryptedHexStr);<br>            var decrypt = CryptoJS.AES.decrypt(srcs, key, &#123;<br>                iv: iv,<br>                mode: CryptoJS.mode.CBC,<br>                padding: CryptoJS.pad.Pkcs7<br>            &#125;);<br>            var decryptedStr = decrypt.toString(CryptoJS.enc.Utf8);<br>            <span class=\"hljs-keyword\">return</span> decryptedStr.toString();<br>        &#125;<br>    &lt;/script&gt;<br>    &lt;script&gt;<br>        var str = &quot;123456&quot;;<br>        var <span class=\"hljs-keyword\">encrypted</span> = encrypt(str);<br>        var decrypt1 = decrypt(<span class=\"hljs-keyword\">encrypted</span>.toString());<br>        document.writeln(&quot;aes cbc 加密 解密&quot;);<br>        document.writeln(&quot;&lt;br/&gt;&quot;);<br>        document.writeln(&quot;待加密：&quot; + str);<br>        document.writeln(&quot;&lt;br/&gt;&quot;);<br>        document.writeln(&quot;加密的密文:&quot;.concat(<span class=\"hljs-keyword\">encrypted</span>));<br>        document.writeln(&quot;&lt;br/&gt;&quot;);<br>        document.writeln(&quot;解密密文的结果:&quot; + decrypt1);<br>    &lt;/script&gt;<br>&lt;/body&gt;<br><br>&lt;/html&gt;<br></code></pre></td></tr></table></figure>\n<p>代码效果如下图</p>\n<p><img src=\"/2022/02/27/15/demo1.webp\" alt=\"demo1\"></p>\n<h2 id=\"其他应用\"><a href=\"#其他应用\" class=\"headerlink\" title=\"其他应用\"></a>其他应用</h2><p>借助crypto-js还可以实现一些很好玩的加密，例如静态页面文章的加密。出于某种原因我的文章“造谣人士生平事”之前就使用了这种加密方式。<br>判断文章标题是“加密”开头后，就引入aes.js文件</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">        </span><br><span class=\"language-javascript\">        <span class=\"hljs-keyword\">var</span> postTitleValue = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">querySelector</span>(<span class=\"hljs-string\">&quot;.post-title&quot;</span>).<span class=\"hljs-property\">innerHTML</span>.<span class=\"hljs-title function_\">trim</span>();</span><br><span class=\"language-javascript\">        <span class=\"hljs-keyword\">if</span> (postTitleValue.<span class=\"hljs-title function_\">slice</span>(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">2</span>) === <span class=\"hljs-string\">&quot;加密&quot;</span>) &#123;</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">            <span class=\"hljs-keyword\">var</span> oScript = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">createElement</span>(<span class=\"hljs-string\">&quot;script&quot;</span>);</span><br><span class=\"language-javascript\">            oScript.<span class=\"hljs-property\">src</span> = <span class=\"hljs-string\">&quot;./aes.js&quot;</span>;</span><br><span class=\"language-javascript\">            <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">body</span>.<span class=\"hljs-title function_\">appendChild</span>(oScript);</span><br><span class=\"language-javascript\">        &#125;</span><br><span class=\"language-javascript\">    </span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<p>引入aes.js后添加密钥和密钥偏移量输入框，添加加密解密函数，添加点击事件。默认的密钥和密码偏移量都为”1234560000000000”，但是千万不要使用默认密码和密钥，最方便的做法是使用在线随机数生成工具生成随机密钥和随机密钥偏移量。</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">//aes加密<br><span class=\"hljs-keyword\">function</span> encrypt(word, keyy, ivv) &#123;<br>    var key = keyy ? CryptoJS.enc.Utf8.parse(keyy) : CryptoJS.enc.Utf8.parse(&quot;1234560000000000&quot;); //<span class=\"hljs-number\">16</span>位<br>    var iv = ivv ? CryptoJS.enc.Utf8.parse(ivv) : CryptoJS.enc.Utf8.parse(&quot;1234567890000000&quot;);<br>    var <span class=\"hljs-keyword\">encrypted</span> = <span class=\"hljs-string\">&#x27;&#x27;</span>;<br>    <span class=\"hljs-keyword\">if</span> (typeof (word) == <span class=\"hljs-string\">&#x27;string&#x27;</span>) &#123;<br>        var srcs = CryptoJS.enc.Utf8.parse(word);<br>        <span class=\"hljs-keyword\">encrypted</span> = CryptoJS.AES.encrypt(srcs, key, &#123;<br>            iv: iv,<br>            mode: CryptoJS.mode.CBC,<br>            padding: CryptoJS.pad.Pkcs7<br>        &#125;);<br>    &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (typeof (word) == <span class=\"hljs-string\">&#x27;object&#x27;</span>) &#123; //对象格式的转成<span class=\"hljs-type\">json</span>字符串<br>        data = <span class=\"hljs-type\">JSON</span>.stringify(word);<br>        var srcs = CryptoJS.enc.Utf8.parse(data);<br>        <span class=\"hljs-keyword\">encrypted</span> = CryptoJS.AES.encrypt(srcs, key, &#123;<br>            iv: iv,<br>            mode: CryptoJS.mode.CBC,<br>            padding: CryptoJS.pad.Pkcs7<br>        &#125;)<br>    &#125;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">encrypted</span>.ciphertext.toString();<br>&#125;<br>// aes解密<br><span class=\"hljs-keyword\">function</span> decrypt(word, keyy, ivv) &#123;<br>    var key = keyy ? CryptoJS.enc.Utf8.parse(keyy) : CryptoJS.enc.Utf8.parse(&quot;1234560000000000&quot;);<br>    var iv = ivv ? CryptoJS.enc.Utf8.parse(ivv) : CryptoJS.enc.Utf8.parse(&quot;1234567890000000&quot;);<br>    var encryptedHexStr = CryptoJS.enc.Hex.parse(word);<br>    var srcs = CryptoJS.enc.Base64.stringify(encryptedHexStr);<br>    var decrypt = CryptoJS.AES.decrypt(srcs, key, &#123;<br>        iv: iv,<br>        mode: CryptoJS.mode.CBC,<br>        padding: CryptoJS.pad.Pkcs7<br>    &#125;);<br>    var decryptedStr = decrypt.toString(CryptoJS.enc.Utf8);<br>    <span class=\"hljs-keyword\">return</span> decryptedStr.toString();<br>&#125;<br>var <span class=\"hljs-keyword\">lock</span> = document.createElement(&quot;div&quot;),<br>    input = document.createElement(&quot;input&quot;),<br>    inputIvv = document.createElement(&quot;input&quot;),<br>    btn1 = document.createElement(&quot;button&quot;),<br>    btn2 = document.createElement(&quot;button&quot;),<br>    markdown = document.querySelector(&quot;.markdown-body&quot;);<br>    markdown.style.display=&quot;none&quot;<br><span class=\"hljs-keyword\">lock</span>.id = &quot;lock&quot;;<br><span class=\"hljs-keyword\">input</span>.id = &quot;lock-input&quot;;<br>inputIvv.id = &quot;lock-inputIvv&quot;;<br><span class=\"hljs-keyword\">input</span>.<span class=\"hljs-keyword\">type</span>=&quot;password&quot;;<br>inputIvv.<span class=\"hljs-keyword\">type</span>=&quot;password&quot;;<br>btn1.id = &quot;lock-btn1&quot;;<br>btn2.id = &quot;lock-btn2&quot;;<br>btn1.innerHTML = &quot;解密&quot;;<br>btn2.innerHTML = &quot;加密&quot;;<br>document.body.appendChild(<span class=\"hljs-keyword\">lock</span>);<br><span class=\"hljs-keyword\">lock</span>.appendChild(<span class=\"hljs-keyword\">input</span>);<br><span class=\"hljs-keyword\">lock</span>.appendChild(inputIvv);<br><span class=\"hljs-keyword\">lock</span>.appendChild(btn1);<br><span class=\"hljs-keyword\">lock</span>.appendChild(btn2);<br><br>btn1.onclick = <span class=\"hljs-keyword\">function</span> () &#123;<br>    var keyy = <span class=\"hljs-keyword\">input</span>.<span class=\"hljs-keyword\">value</span>;<br>    var ivv = inputIvv.<span class=\"hljs-keyword\">value</span>;<br>    var markdownValue = markdown.innerHTML.trim();<br>    //去除生成干扰，我的文章每次生成会自动包一层div，这一步是为了保证密文永不改变内容，你们不需要这一步<br>    var str = markdownValue.<span class=\"hljs-keyword\">slice</span>(<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">-4</span>);<br>    console.log(str);<br>    var decr = decrypt(str.toString(), keyy, ivv);<br>    markdown.innerHTML = decr.trim();<br>    markdown.style.display=&quot;block&quot;<br>&#125;<br>btn2.onclick = <span class=\"hljs-keyword\">function</span> () &#123;<br>    var keyy = <span class=\"hljs-keyword\">input</span>.<span class=\"hljs-keyword\">value</span>;<br>    var ivv = inputIvv.<span class=\"hljs-keyword\">value</span>;<br>    var markdownValue = markdown.innerHTML.trim();<br>    var str = markdownValue;<br>    var decr = encrypt(str.toString(), keyy, ivv);<br>    markdown.innerHTML = decr.trim();<br>    markdown.style.display=&quot;block&quot;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n<p>加密输入框的css，使用了页面压缩，看起来比较乱。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\"><span class=\"hljs-selector-id\">#lock</span>&#123;<span class=\"hljs-attribute\">overflow</span>:hidden;<span class=\"hljs-attribute\">width</span>:<span class=\"hljs-number\">248px</span>;<span class=\"hljs-attribute\">position</span>:absolute;<span class=\"hljs-attribute\">left</span>:<span class=\"hljs-number\">50%</span>;<span class=\"hljs-attribute\">top</span>:<span class=\"hljs-number\">230px</span>;<span class=\"hljs-attribute\">margin-left</span>:-<span class=\"hljs-number\">100px</span>&#125;<span class=\"hljs-selector-id\">#lock-btn1</span>,<span class=\"hljs-selector-id\">#lock-btn2</span>&#123;<span class=\"hljs-attribute\">margin-left</span>:<span class=\"hljs-number\">31.5px</span>;<span class=\"hljs-attribute\">float</span><span class=\"hljs-selector-pseudo\">:left</span>;<span class=\"hljs-attribute\">display</span>:block;<span class=\"hljs-attribute\">width</span>:<span class=\"hljs-number\">60px</span>;<span class=\"hljs-attribute\">height</span>:<span class=\"hljs-number\">20px</span>;<span class=\"hljs-attribute\">border-radius</span>:<span class=\"hljs-number\">20px</span>;<span class=\"hljs-attribute\">background-color</span>:transparent;<span class=\"hljs-attribute\">color</span>:<span class=\"hljs-number\">#000</span>;-webkit-<span class=\"hljs-attribute\">transition</span>:all <span class=\"hljs-number\">150ms</span> linear;-moz-<span class=\"hljs-attribute\">transition</span>:all <span class=\"hljs-number\">150ms</span> linear;-o-<span class=\"hljs-attribute\">transition</span>:all <span class=\"hljs-number\">150ms</span> linear;-ms-<span class=\"hljs-attribute\">transition</span>:all <span class=\"hljs-number\">150ms</span> linear;<span class=\"hljs-attribute\">transition</span>:all <span class=\"hljs-number\">150ms</span> linear;<span class=\"hljs-attribute\">font-size</span>:<span class=\"hljs-number\">14px</span>;<span class=\"hljs-attribute\">font-weight</span>:normal;<span class=\"hljs-attribute\">text-align</span>:center;<span class=\"hljs-attribute\">border</span>:<span class=\"hljs-number\">1px</span> solid <span class=\"hljs-number\">#66615b</span>&#125;<span class=\"hljs-selector-id\">#lock-btn2</span>&#123;<span class=\"hljs-attribute\">margin-left</span>:<span class=\"hljs-number\">61.5px</span>&#125;<span class=\"hljs-selector-id\">#lock-btn1</span><span class=\"hljs-selector-pseudo\">:hover</span>,<span class=\"hljs-selector-id\">#lock-btn2</span><span class=\"hljs-selector-pseudo\">:hover</span>&#123;<span class=\"hljs-attribute\">background-color</span>:<span class=\"hljs-number\">#66615b</span>;<span class=\"hljs-attribute\">color</span>:<span class=\"hljs-built_in\">rgba</span>(<span class=\"hljs-number\">255</span>,<span class=\"hljs-number\">255</span>,<span class=\"hljs-number\">255</span>,<span class=\"hljs-number\">0.7</span>);<span class=\"hljs-attribute\">border-color</span>:<span class=\"hljs-number\">#66615b</span>&#125;<span class=\"hljs-selector-id\">#lock-input</span>,<span class=\"hljs-selector-id\">#lock-inputIvv</span>&#123;<span class=\"hljs-attribute\">border-radius</span>:<span class=\"hljs-number\">20px</span>;<span class=\"hljs-attribute\">outline</span>:<span class=\"hljs-number\">0</span>;<span class=\"hljs-attribute\">padding</span>:<span class=\"hljs-number\">0</span> <span class=\"hljs-number\">10px</span>;<span class=\"hljs-attribute\">width</span>:<span class=\"hljs-number\">100px</span>;<span class=\"hljs-attribute\">height</span>:<span class=\"hljs-number\">20px</span>;<span class=\"hljs-attribute\">background</span>:transparent;<span class=\"hljs-attribute\">color</span>:<span class=\"hljs-number\">#000</span>;<span class=\"hljs-attribute\">font-size</span>:<span class=\"hljs-number\">1.25em</span>;<span class=\"hljs-attribute\">float</span><span class=\"hljs-selector-pseudo\">:left</span>&#125;<span class=\"hljs-selector-id\">#lock-input</span><span class=\"hljs-selector-pseudo\">:hover</span>,<span class=\"hljs-selector-id\">#lock-inputIvv</span><span class=\"hljs-selector-pseudo\">:hover</span>&#123;<span class=\"hljs-attribute\">background-color</span>:<span class=\"hljs-number\">#66615b</span>;<span class=\"hljs-attribute\">color</span>:<span class=\"hljs-built_in\">rgba</span>(<span class=\"hljs-number\">255</span>,<span class=\"hljs-number\">255</span>,<span class=\"hljs-number\">255</span>,<span class=\"hljs-number\">0.7</span>);<span class=\"hljs-attribute\">border-color</span>:<span class=\"hljs-built_in\">rgba</span>(<span class=\"hljs-number\">255</span>,<span class=\"hljs-number\">255</span>,<span class=\"hljs-number\">255</span>,<span class=\"hljs-number\">0.7</span>)&#125;<br></code></pre></td></tr></table></figure>\n<p>每次需要发布加密的文章时，将文章标题命名为”加密.XXX“，页面就会出现加密解密框，首次发布请输入密钥和密钥偏移量 点击加密，拿到密文。然后将文章内容改为密文。保存好你的密钥和密钥偏移量，以后查看加密文章时，输入密钥和密钥偏移量 点击解密，即可看到原始的文章。<br>代码效果如下两图</p>\n<p><img src=\"/2022/02/27/15/demo2.webp\" alt=\"demo2\"></p>\n<p><img src=\"/2022/02/27/15/demo3.webp\" alt=\"demo3\"></p>\n","more":"<h2 id=\"crypto-js是什么\"><a href=\"#crypto-js是什么\" class=\"headerlink\" title=\"crypto-js是什么\"></a>crypto-js是什么</h2><p>使用crypto-js也是很久之前的事了，一直都没有好好整理，今天借助博客重构的机会，好好捋一下。crypto-js是一个加密算法库，支持哈希算法，如：MD5、SHA-1、SHA-2、SHA-3、RIPEMD-160也支持多种加密方式，如：AES、DES, Triple DES、Rabbit、RC4, RC4Drop。可实现多种多样的加密算法。<br><img src=\"/img/15/0.webp\" alt=\"利用crypto-js实现静态网页数据加密\"></p>\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><p>在<a href=\"https://github.com/brix/crypto-js\">github.com&#x2F;brix&#x2F;crypto-js</a> 上引入相关文件，因为我只需要使用aes加密算法，所以没有引入整个库而是只下载了aes.js单个文件。<br>借助强大的crypto-js，我们只需要几行代码就可以实现加密效果，下面是一个使用aes加密的demo，效果为在页面加密字符串“123456”，并解密加密的密文。</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">&lt;!DOCTYPE html&gt;<br>&lt;html lang=&quot;en&quot;&gt;<br><br>&lt;head&gt;<br>    &lt;meta charset=&quot;UTF-8&quot;&gt;<br>    &lt;title&gt;Title&lt;/title&gt;<br>    &lt;script src=&quot;./aes.js&quot;&gt;&lt;/script&gt;<br>&lt;/head&gt;<br><br>&lt;body&gt;<br>    &lt;script&gt;<br>        //aes加密<br>        <span class=\"hljs-keyword\">function</span> encrypt(word) &#123;<br>            var key = CryptoJS.enc.Utf8.parse(&quot;1234560000000000&quot;); //<span class=\"hljs-number\">16</span>位<br>            var iv = CryptoJS.enc.Utf8.parse(&quot;1234567890000000&quot;);<br>            var <span class=\"hljs-keyword\">encrypted</span> = <span class=\"hljs-string\">&#x27;&#x27;</span>;<br>            <span class=\"hljs-keyword\">if</span> (typeof (word) == <span class=\"hljs-string\">&#x27;string&#x27;</span>) &#123;<br>                var srcs = CryptoJS.enc.Utf8.parse(word);<br>                <span class=\"hljs-keyword\">encrypted</span> = CryptoJS.AES.encrypt(srcs, key, &#123;<br>                    iv: iv,<br>                    mode: CryptoJS.mode.CBC,<br>                    padding: CryptoJS.pad.Pkcs7<br>                &#125;);<br>            &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (typeof (word) == <span class=\"hljs-string\">&#x27;object&#x27;</span>) &#123; //对象格式的转成<span class=\"hljs-type\">json</span>字符串<br>                data = <span class=\"hljs-type\">JSON</span>.stringify(word);<br>                var srcs = CryptoJS.enc.Utf8.parse(data);<br>                <span class=\"hljs-keyword\">encrypted</span> = CryptoJS.AES.encrypt(srcs, key, &#123;<br>                    iv: iv,<br>                    mode: CryptoJS.mode.CBC,<br>                    padding: CryptoJS.pad.Pkcs7<br>                &#125;)<br>            &#125;<br>            <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">encrypted</span>.ciphertext.toString();<br>        &#125;<br>        // aes解密<br>        <span class=\"hljs-keyword\">function</span> decrypt(word) &#123;<br>            var key = CryptoJS.enc.Utf8.parse(&quot;1234560000000000&quot;);<br>            var iv = CryptoJS.enc.Utf8.parse(&quot;1234567890000000&quot;);<br>            var encryptedHexStr = CryptoJS.enc.Hex.parse(word);<br>            var srcs = CryptoJS.enc.Base64.stringify(encryptedHexStr);<br>            var decrypt = CryptoJS.AES.decrypt(srcs, key, &#123;<br>                iv: iv,<br>                mode: CryptoJS.mode.CBC,<br>                padding: CryptoJS.pad.Pkcs7<br>            &#125;);<br>            var decryptedStr = decrypt.toString(CryptoJS.enc.Utf8);<br>            <span class=\"hljs-keyword\">return</span> decryptedStr.toString();<br>        &#125;<br>    &lt;/script&gt;<br>    &lt;script&gt;<br>        var str = &quot;123456&quot;;<br>        var <span class=\"hljs-keyword\">encrypted</span> = encrypt(str);<br>        var decrypt1 = decrypt(<span class=\"hljs-keyword\">encrypted</span>.toString());<br>        document.writeln(&quot;aes cbc 加密 解密&quot;);<br>        document.writeln(&quot;&lt;br/&gt;&quot;);<br>        document.writeln(&quot;待加密：&quot; + str);<br>        document.writeln(&quot;&lt;br/&gt;&quot;);<br>        document.writeln(&quot;加密的密文:&quot;.concat(<span class=\"hljs-keyword\">encrypted</span>));<br>        document.writeln(&quot;&lt;br/&gt;&quot;);<br>        document.writeln(&quot;解密密文的结果:&quot; + decrypt1);<br>    &lt;/script&gt;<br>&lt;/body&gt;<br><br>&lt;/html&gt;<br></code></pre></td></tr></table></figure>\n<p>代码效果如下图</p>\n<p><img src=\"/2022/02/27/15/demo1.webp\" alt=\"demo1\"></p>\n<h2 id=\"其他应用\"><a href=\"#其他应用\" class=\"headerlink\" title=\"其他应用\"></a>其他应用</h2><p>借助crypto-js还可以实现一些很好玩的加密，例如静态页面文章的加密。出于某种原因我的文章“造谣人士生平事”之前就使用了这种加密方式。<br>判断文章标题是“加密”开头后，就引入aes.js文件</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">        </span><br><span class=\"language-javascript\">        <span class=\"hljs-keyword\">var</span> postTitleValue = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">querySelector</span>(<span class=\"hljs-string\">&quot;.post-title&quot;</span>).<span class=\"hljs-property\">innerHTML</span>.<span class=\"hljs-title function_\">trim</span>();</span><br><span class=\"language-javascript\">        <span class=\"hljs-keyword\">if</span> (postTitleValue.<span class=\"hljs-title function_\">slice</span>(<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">2</span>) === <span class=\"hljs-string\">&quot;加密&quot;</span>) &#123;</span><br><span class=\"language-javascript\"></span><br><span class=\"language-javascript\">            <span class=\"hljs-keyword\">var</span> oScript = <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-title function_\">createElement</span>(<span class=\"hljs-string\">&quot;script&quot;</span>);</span><br><span class=\"language-javascript\">            oScript.<span class=\"hljs-property\">src</span> = <span class=\"hljs-string\">&quot;./aes.js&quot;</span>;</span><br><span class=\"language-javascript\">            <span class=\"hljs-variable language_\">document</span>.<span class=\"hljs-property\">body</span>.<span class=\"hljs-title function_\">appendChild</span>(oScript);</span><br><span class=\"language-javascript\">        &#125;</span><br><span class=\"language-javascript\">    </span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span><br></code></pre></td></tr></table></figure>\n<p>引入aes.js后添加密钥和密钥偏移量输入框，添加加密解密函数，添加点击事件。默认的密钥和密码偏移量都为”1234560000000000”，但是千万不要使用默认密码和密钥，最方便的做法是使用在线随机数生成工具生成随机密钥和随机密钥偏移量。</p>\n<figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs pgsql\">//aes加密<br><span class=\"hljs-keyword\">function</span> encrypt(word, keyy, ivv) &#123;<br>    var key = keyy ? CryptoJS.enc.Utf8.parse(keyy) : CryptoJS.enc.Utf8.parse(&quot;1234560000000000&quot;); //<span class=\"hljs-number\">16</span>位<br>    var iv = ivv ? CryptoJS.enc.Utf8.parse(ivv) : CryptoJS.enc.Utf8.parse(&quot;1234567890000000&quot;);<br>    var <span class=\"hljs-keyword\">encrypted</span> = <span class=\"hljs-string\">&#x27;&#x27;</span>;<br>    <span class=\"hljs-keyword\">if</span> (typeof (word) == <span class=\"hljs-string\">&#x27;string&#x27;</span>) &#123;<br>        var srcs = CryptoJS.enc.Utf8.parse(word);<br>        <span class=\"hljs-keyword\">encrypted</span> = CryptoJS.AES.encrypt(srcs, key, &#123;<br>            iv: iv,<br>            mode: CryptoJS.mode.CBC,<br>            padding: CryptoJS.pad.Pkcs7<br>        &#125;);<br>    &#125; <span class=\"hljs-keyword\">else</span> <span class=\"hljs-keyword\">if</span> (typeof (word) == <span class=\"hljs-string\">&#x27;object&#x27;</span>) &#123; //对象格式的转成<span class=\"hljs-type\">json</span>字符串<br>        data = <span class=\"hljs-type\">JSON</span>.stringify(word);<br>        var srcs = CryptoJS.enc.Utf8.parse(data);<br>        <span class=\"hljs-keyword\">encrypted</span> = CryptoJS.AES.encrypt(srcs, key, &#123;<br>            iv: iv,<br>            mode: CryptoJS.mode.CBC,<br>            padding: CryptoJS.pad.Pkcs7<br>        &#125;)<br>    &#125;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">encrypted</span>.ciphertext.toString();<br>&#125;<br>// aes解密<br><span class=\"hljs-keyword\">function</span> decrypt(word, keyy, ivv) &#123;<br>    var key = keyy ? CryptoJS.enc.Utf8.parse(keyy) : CryptoJS.enc.Utf8.parse(&quot;1234560000000000&quot;);<br>    var iv = ivv ? CryptoJS.enc.Utf8.parse(ivv) : CryptoJS.enc.Utf8.parse(&quot;1234567890000000&quot;);<br>    var encryptedHexStr = CryptoJS.enc.Hex.parse(word);<br>    var srcs = CryptoJS.enc.Base64.stringify(encryptedHexStr);<br>    var decrypt = CryptoJS.AES.decrypt(srcs, key, &#123;<br>        iv: iv,<br>        mode: CryptoJS.mode.CBC,<br>        padding: CryptoJS.pad.Pkcs7<br>    &#125;);<br>    var decryptedStr = decrypt.toString(CryptoJS.enc.Utf8);<br>    <span class=\"hljs-keyword\">return</span> decryptedStr.toString();<br>&#125;<br>var <span class=\"hljs-keyword\">lock</span> = document.createElement(&quot;div&quot;),<br>    input = document.createElement(&quot;input&quot;),<br>    inputIvv = document.createElement(&quot;input&quot;),<br>    btn1 = document.createElement(&quot;button&quot;),<br>    btn2 = document.createElement(&quot;button&quot;),<br>    markdown = document.querySelector(&quot;.markdown-body&quot;);<br>    markdown.style.display=&quot;none&quot;<br><span class=\"hljs-keyword\">lock</span>.id = &quot;lock&quot;;<br><span class=\"hljs-keyword\">input</span>.id = &quot;lock-input&quot;;<br>inputIvv.id = &quot;lock-inputIvv&quot;;<br><span class=\"hljs-keyword\">input</span>.<span class=\"hljs-keyword\">type</span>=&quot;password&quot;;<br>inputIvv.<span class=\"hljs-keyword\">type</span>=&quot;password&quot;;<br>btn1.id = &quot;lock-btn1&quot;;<br>btn2.id = &quot;lock-btn2&quot;;<br>btn1.innerHTML = &quot;解密&quot;;<br>btn2.innerHTML = &quot;加密&quot;;<br>document.body.appendChild(<span class=\"hljs-keyword\">lock</span>);<br><span class=\"hljs-keyword\">lock</span>.appendChild(<span class=\"hljs-keyword\">input</span>);<br><span class=\"hljs-keyword\">lock</span>.appendChild(inputIvv);<br><span class=\"hljs-keyword\">lock</span>.appendChild(btn1);<br><span class=\"hljs-keyword\">lock</span>.appendChild(btn2);<br><br>btn1.onclick = <span class=\"hljs-keyword\">function</span> () &#123;<br>    var keyy = <span class=\"hljs-keyword\">input</span>.<span class=\"hljs-keyword\">value</span>;<br>    var ivv = inputIvv.<span class=\"hljs-keyword\">value</span>;<br>    var markdownValue = markdown.innerHTML.trim();<br>    //去除生成干扰，我的文章每次生成会自动包一层div，这一步是为了保证密文永不改变内容，你们不需要这一步<br>    var str = markdownValue.<span class=\"hljs-keyword\">slice</span>(<span class=\"hljs-number\">3</span>,<span class=\"hljs-number\">-4</span>);<br>    console.log(str);<br>    var decr = decrypt(str.toString(), keyy, ivv);<br>    markdown.innerHTML = decr.trim();<br>    markdown.style.display=&quot;block&quot;<br>&#125;<br>btn2.onclick = <span class=\"hljs-keyword\">function</span> () &#123;<br>    var keyy = <span class=\"hljs-keyword\">input</span>.<span class=\"hljs-keyword\">value</span>;<br>    var ivv = inputIvv.<span class=\"hljs-keyword\">value</span>;<br>    var markdownValue = markdown.innerHTML.trim();<br>    var str = markdownValue;<br>    var decr = encrypt(str.toString(), keyy, ivv);<br>    markdown.innerHTML = decr.trim();<br>    markdown.style.display=&quot;block&quot;<br>&#125;<br><br></code></pre></td></tr></table></figure>\n<p>加密输入框的css，使用了页面压缩，看起来比较乱。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><code class=\"hljs css\"><span class=\"hljs-selector-id\">#lock</span>&#123;<span class=\"hljs-attribute\">overflow</span>:hidden;<span class=\"hljs-attribute\">width</span>:<span class=\"hljs-number\">248px</span>;<span class=\"hljs-attribute\">position</span>:absolute;<span class=\"hljs-attribute\">left</span>:<span class=\"hljs-number\">50%</span>;<span class=\"hljs-attribute\">top</span>:<span class=\"hljs-number\">230px</span>;<span class=\"hljs-attribute\">margin-left</span>:-<span class=\"hljs-number\">100px</span>&#125;<span class=\"hljs-selector-id\">#lock-btn1</span>,<span class=\"hljs-selector-id\">#lock-btn2</span>&#123;<span class=\"hljs-attribute\">margin-left</span>:<span class=\"hljs-number\">31.5px</span>;<span class=\"hljs-attribute\">float</span><span class=\"hljs-selector-pseudo\">:left</span>;<span class=\"hljs-attribute\">display</span>:block;<span class=\"hljs-attribute\">width</span>:<span class=\"hljs-number\">60px</span>;<span class=\"hljs-attribute\">height</span>:<span class=\"hljs-number\">20px</span>;<span class=\"hljs-attribute\">border-radius</span>:<span class=\"hljs-number\">20px</span>;<span class=\"hljs-attribute\">background-color</span>:transparent;<span class=\"hljs-attribute\">color</span>:<span class=\"hljs-number\">#000</span>;-webkit-<span class=\"hljs-attribute\">transition</span>:all <span class=\"hljs-number\">150ms</span> linear;-moz-<span class=\"hljs-attribute\">transition</span>:all <span class=\"hljs-number\">150ms</span> linear;-o-<span class=\"hljs-attribute\">transition</span>:all <span class=\"hljs-number\">150ms</span> linear;-ms-<span class=\"hljs-attribute\">transition</span>:all <span class=\"hljs-number\">150ms</span> linear;<span class=\"hljs-attribute\">transition</span>:all <span class=\"hljs-number\">150ms</span> linear;<span class=\"hljs-attribute\">font-size</span>:<span class=\"hljs-number\">14px</span>;<span class=\"hljs-attribute\">font-weight</span>:normal;<span class=\"hljs-attribute\">text-align</span>:center;<span class=\"hljs-attribute\">border</span>:<span class=\"hljs-number\">1px</span> solid <span class=\"hljs-number\">#66615b</span>&#125;<span class=\"hljs-selector-id\">#lock-btn2</span>&#123;<span class=\"hljs-attribute\">margin-left</span>:<span class=\"hljs-number\">61.5px</span>&#125;<span class=\"hljs-selector-id\">#lock-btn1</span><span class=\"hljs-selector-pseudo\">:hover</span>,<span class=\"hljs-selector-id\">#lock-btn2</span><span class=\"hljs-selector-pseudo\">:hover</span>&#123;<span class=\"hljs-attribute\">background-color</span>:<span class=\"hljs-number\">#66615b</span>;<span class=\"hljs-attribute\">color</span>:<span class=\"hljs-built_in\">rgba</span>(<span class=\"hljs-number\">255</span>,<span class=\"hljs-number\">255</span>,<span class=\"hljs-number\">255</span>,<span class=\"hljs-number\">0.7</span>);<span class=\"hljs-attribute\">border-color</span>:<span class=\"hljs-number\">#66615b</span>&#125;<span class=\"hljs-selector-id\">#lock-input</span>,<span class=\"hljs-selector-id\">#lock-inputIvv</span>&#123;<span class=\"hljs-attribute\">border-radius</span>:<span class=\"hljs-number\">20px</span>;<span class=\"hljs-attribute\">outline</span>:<span class=\"hljs-number\">0</span>;<span class=\"hljs-attribute\">padding</span>:<span class=\"hljs-number\">0</span> <span class=\"hljs-number\">10px</span>;<span class=\"hljs-attribute\">width</span>:<span class=\"hljs-number\">100px</span>;<span class=\"hljs-attribute\">height</span>:<span class=\"hljs-number\">20px</span>;<span class=\"hljs-attribute\">background</span>:transparent;<span class=\"hljs-attribute\">color</span>:<span class=\"hljs-number\">#000</span>;<span class=\"hljs-attribute\">font-size</span>:<span class=\"hljs-number\">1.25em</span>;<span class=\"hljs-attribute\">float</span><span class=\"hljs-selector-pseudo\">:left</span>&#125;<span class=\"hljs-selector-id\">#lock-input</span><span class=\"hljs-selector-pseudo\">:hover</span>,<span class=\"hljs-selector-id\">#lock-inputIvv</span><span class=\"hljs-selector-pseudo\">:hover</span>&#123;<span class=\"hljs-attribute\">background-color</span>:<span class=\"hljs-number\">#66615b</span>;<span class=\"hljs-attribute\">color</span>:<span class=\"hljs-built_in\">rgba</span>(<span class=\"hljs-number\">255</span>,<span class=\"hljs-number\">255</span>,<span class=\"hljs-number\">255</span>,<span class=\"hljs-number\">0.7</span>);<span class=\"hljs-attribute\">border-color</span>:<span class=\"hljs-built_in\">rgba</span>(<span class=\"hljs-number\">255</span>,<span class=\"hljs-number\">255</span>,<span class=\"hljs-number\">255</span>,<span class=\"hljs-number\">0.7</span>)&#125;<br></code></pre></td></tr></table></figure>\n<p>每次需要发布加密的文章时，将文章标题命名为”加密.XXX“，页面就会出现加密解密框，首次发布请输入密钥和密钥偏移量 点击加密，拿到密文。然后将文章内容改为密文。保存好你的密钥和密钥偏移量，以后查看加密文章时，输入密钥和密钥偏移量 点击解密，即可看到原始的文章。<br>代码效果如下两图</p>\n<p><img src=\"/2022/02/27/15/demo2.webp\" alt=\"demo2\"></p>\n<p><img src=\"/2022/02/27/15/demo3.webp\" alt=\"demo3\"></p>\n","categories":[{"name":"IT","path":"api/categories/IT.json"}],"tags":[{"name":"加密","path":"api/tags/加密.json"}]}